use PHPUnit\Framework\TestCase;
use webignition\DomElementIdentifier\ElementIdentifier;

class GeneratedHasActionHasAssertionTest extends TestCase
{
    public static function setUpBeforeClass(): void
    {
        parent::setUpBeforeClass();
        self::$client->request('GET', 'http://example.com');
        self::setBasilTestPath('with-action-and-assertion.yml');
    }

    public function testBdc4b8bd83e5660d1c62908dc7a7c43a()
    {
        $this->setBasilStepName('step one');

        // $".selector" exists <- click $".selector"
        $this->handledStatements[] = $this->assertionFactory->createFromJson('{
            "operator": "exists",
            "source_type": "action",
            "source": {
                "source": "click $\\".selector\\"",
                "type": "click",
                "arguments": "$\\".selector\\"",
                "identifier": "$\\".selector\\""
            },
            "value": "$\\".selector\\""
        }');
        $this->examinedElementIdentifier = ElementIdentifier::fromJson('{
            "locator": ".selector"
        }');
        $this->setBooleanExaminedValue(
            $this->navigator->hasOne($this->examinedElementIdentifier)
        );
        $this->assertTrue(
            $this->getBooleanExaminedValue()
        );

        // click $".selector"
        $this->handledStatements[] = $this->actionFactory->createFromJson('{
            "source": "click $\\".selector\\"",
            "type": "click",
            "arguments": "$\\".selector\\"",
            "identifier": "$\\".selector\\""
        }');
        $element = $this->navigator->findOne(ElementIdentifier::fromJson('{
            "locator": ".selector"
        }'));
        $element->click();
        $this->refreshCrawlerAndNavigator();

        // $page.title is "Page Title"
        $this->handledStatements[] = $this->assertionFactory->createFromJson('{
            "source": "$page.title is \\"Page Title\\"",
            "identifier": "$page.title",
            "comparison": "is",
            "value": "\\"Page Title\\""
        }');
        $this->setExpectedValue("Page Title" ?? null);
        $this->setExaminedValue(self::$client->getTitle() ?? null);
        $this->assertEquals(
            $this->getExpectedValue(),
            $this->getExaminedValue()
        );
    }
}